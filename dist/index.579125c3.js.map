{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const dom = document.getElementById('main');\n// eslint-disable-next-line no-undef\nconst myChart = echarts.init(dom);\n\nconst url = 'https://www.ag-grid.com/example-assets/olympic-winners.json';\nlet option;\n\nconst getData = fetch(url)\n  .then((response) => response.json())\n  .then((user) => user);\n\nconst printData = async () => {\n  const dataFromApi = await getData; \n  const names = dataFromApi.map(item => item.athlete);\n  const filtered = dataFromApi\n    .filter(({athlete}, index) => !names.includes(athlete, index + 1))\n    .slice(0, 15);\n\n  const getName = (num) => {\n    const findName = filtered.map((index) => index.athlete);\n    const name = findName.find((_, index) => index === num)\n\n    return name;\n  };\n\n  const getGold = (num) => {\n    const findGold = filtered.map( index => index.gold);\n    const findMedal = findGold.find((_, index) => index === num);\n\n    return findMedal;\n  };\n\n  const getSilver = (num) => {\n    const getAllSilver = filtered.map( index => index.silver);\n    const findMedal = getAllSilver.find((_, index) => index === num);\n\n    return findMedal;\n  };\n\n  const getBronze = (num) => {\n    const getBronze = filtered.map( index => index.bronze);\n    const findMedal = getBronze.find((_, index) => index === num);\n\n    return findMedal;\n  };\n\n  option = {\n    color: ['#f0d456', '#b1b3b2', '#c98908'],\n    tooltip: {},\n    legend: {\n      orient: 'vertical',\n      left: 'right'\n    },\n    dataset: [{\n      dimensions: ['name', 'goldMedals', 'silverMedals', 'bronzeMedals'],\n      source: [\n        { name: getName(0), goldMedals: getGold(0), silverMedals: getSilver(0), bronzeMedals: getBronze(0)},\n        { name: getName(1), goldMedals: getGold(1), silverMedals: getSilver(1), bronzeMedals: getBronze(1)},\n        { name: getName(2), goldMedals: getGold(2), silverMedals: getSilver(2), bronzeMedals: getBronze(2)},\n        { name: getName(3), goldMedals: getGold(3), silverMedals: getSilver(3), bronzeMedals: getBronze(3)},\n        { name: getName(4), goldMedals: getGold(4), silverMedals: getSilver(4), bronzeMedals: getBronze(4)},\n        { name: getName(5), goldMedals: getGold(5), silverMedals: getSilver(5), bronzeMedals: getBronze(5)},\n        { name: getName(6), goldMedals: getGold(6), silverMedals: getSilver(6), bronzeMedals: getBronze(6)},\n        { name: getName(7), goldMedals: getGold(7), silverMedals: getSilver(7), bronzeMedals: getBronze(7)},\n        { name: getName(8), goldMedals: getGold(8), silverMedals: getSilver(8), bronzeMedals: getBronze(8)},\n        { name: getName(9), goldMedals: getGold(9), silverMedals: getSilver(9), bronzeMedals: getBronze(9)},\n        { name: getName(10), goldMedals: getGold(10), silverMedals: getSilver(10), bronzeMedals: getBronze(10)},\n        { name: getName(11), goldMedals: getGold(11), silverMedals: getSilver(11), bronzeMedals: getBronze(11)},\n        { name: getName(12), goldMedals: getGold(12), silverMedals: getSilver(12), bronzeMedals: getBronze(12)},\n        { name: getName(13), goldMedals: getGold(13), silverMedals: getSilver(13), bronzeMedals: getBronze(13)},\n        { name: getName(14), goldMedals: getGold(14), silverMedals: getSilver(14), bronzeMedals: getBronze(14)},\n      ],\n    }],\n    xAxis: {\n      type: 'category',\n      axisLabel: { interval: 0, rotate: 30 }\n    }, \n    yAxis: {},\n    series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }],\n  };\n\n  option && myChart.setOption(option);\n\n  if (option && typeof option === 'object') {\n    myChart.setOption(option);\n  }\n}\n\nprintData ();\n\nwindow.addEventListener('resize', myChart.resize);"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}