{"mappings":"AAAA,MAAM,MAAM,SAAS,cAAc,CAAC;AACpC,oCAAoC;AACpC,MAAM,UAAU,QAAQ,IAAI,CAAC;AAE7B,MAAM,MAAM;AACZ,IAAI;AAEJ,MAAM,UAAU,MAAM,KACnB,IAAI,CAAC,CAAC,WAAa,SAAS,IAAI,IAChC,IAAI,CAAC,CAAC,OAAS;AAElB,MAAM,YAAY,UAAY;IAC5B,MAAM,cAAc,MAAM;IAC1B,MAAM,QAAQ,YAAY,GAAG,CAAC,CAAA,OAAQ,KAAK,OAAO;IAClD,MAAM,WAAW,YACd,MAAM,CAAC,CAAC,EAAC,QAAO,EAAC,EAAE,QAAU,CAAC,MAAM,QAAQ,CAAC,SAAS,QAAQ,IAC9D,KAAK,CAAC,GAAG;IAEZ,MAAM,aAAa,CAAC,QAAU;QAC1B,OAAO;YACL,MAAM,MAAM,OAAO;YACnB,YAAY,MAAM,IAAI;YACtB,cAAc,MAAM,MAAM;YAC1B,cAAc,MAAM,MAAM;QAC5B;IACF;IAEF,SAAS;QACP,OAAO;YAAC;YAAW;YAAW;SAAU;QACxC,SAAS,CAAC;QACV,QAAQ;YACN,QAAQ;YACR,MAAM;QACR;QACA,SAAS;YAAC;gBACR,YAAY;oBAAC;oBAAQ;oBAAc;oBAAgB;iBAAe;gBAClE,QAAQ,SAAS,GAAG,CAAC,CAAA,SACnB,WAAW;YAEf;SAAE;QACF,OAAO;YACL,MAAM;YACN,WAAW;gBAAE,UAAU;gBAAG,QAAQ;YAAG;QACvC;QACA,OAAO,CAAC;QACR,QAAQ;YAAC;gBAAE,MAAM;YAAM;YAAG;gBAAE,MAAM;YAAM;YAAG;gBAAE,MAAM;YAAM;SAAE;IAC7D;IAEA,UAAU,QAAQ,SAAS,CAAC;IAE5B,IAAI,UAAU,OAAO,WAAW,UAC9B,QAAQ,SAAS,CAAC;AAEtB;AAEA;AAEA,OAAO,gBAAgB,CAAC,UAAU,QAAQ,MAAM","sources":["src/index.js"],"sourcesContent":["const dom = document.getElementById('main');\n// eslint-disable-next-line no-undef\nconst myChart = echarts.init(dom);\n\nconst url = 'https://www.ag-grid.com/example-assets/olympic-winners.json';\nlet option;\n\nconst getData = fetch(url)\n  .then((response) => response.json())\n  .then((user) => user);\n\nconst printData = async () => {\n  const dataFromApi = await getData; \n  const names = dataFromApi.map(item => item.athlete);\n  const filtered = dataFromApi\n    .filter(({athlete}, index) => !names.includes(athlete, index + 1))\n    .slice(0, 15);\n \n  const returnData = (array) => {\n      return {\n        name: array.athlete,\n        goldMedals: array.gold,\n        silverMedals: array.silver,\n        bronzeMedals: array.bronze,\n      }\n    }\n\n  option = {\n    color: ['#f0d456', '#b1b3b2', '#c98908'],\n    tooltip: {},\n    legend: {\n      orient: 'vertical',\n      left: 'right'\n    },\n    dataset: [{\n      dimensions: ['name', 'goldMedals', 'silverMedals', 'bronzeMedals'],\n      source: filtered.map(answer => (\n        returnData(answer)\n      )),\n    }],\n    xAxis: {\n      type: 'category',\n      axisLabel: { interval: 0, rotate: 30 }\n    }, \n    yAxis: {},\n    series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }],\n  };\n\n  option && myChart.setOption(option);\n\n  if (option && typeof option === 'object') {\n    myChart.setOption(option);\n  }\n}\n\nprintData ();\n\nwindow.addEventListener('resize', myChart.resize);"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}